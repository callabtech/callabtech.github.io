{"version":3,"file":"component---src-pages-notices-register-index-tsx-afcff3c7f97334803ab1.js","mappings":"kQAsEA,MAtDsDA,IAM/C,IANgD,MACrDC,EAAK,cAAEC,EAAa,SACpBC,EAAQ,iBAAEC,EAAgB,aAC1BC,EAAY,gBACZC,EAAe,UACfC,GACDP,EACC,OACEQ,EAAAA,cAAA,OAAKC,MAAO,CAAEC,QAAS,SACrBF,EAAAA,cAACG,EAAAA,EAAU,CAACC,QAAQ,KAAKH,MAAO,CAAEI,aAAc,SAAU,QAI1DL,EAAAA,cAACM,EAAAA,EAAS,CACRC,MAAM,KACNC,WAAS,EACTJ,QAAQ,WACRK,OAAO,SACPC,MAAOjB,EACPkB,SAAWC,GAAUlB,EAAckB,EAAMC,OAAOH,OAChDI,SAAUf,IAGZC,EAAAA,cAAA,OAAKC,MAAO,CAAEI,aAAc,SAC1BL,EAAAA,cAACe,EAAAA,EAAU,CACTL,MAAOf,EACPgB,SAAUf,EACVoB,YAAY,aACZC,SAAUlB,KAIdC,EAAAA,cAAA,SACEkB,KAAK,OACLC,UAAQ,EACRlB,MAAO,CAAEI,aAAc,OAAQe,QAAS,SACxCC,IAAKxB,IAGPG,EAAAA,cAACsB,EAAAA,EAAM,CACLlB,QAAQ,YACRmB,MAAM,UACNC,QAAS1B,EACTgB,SAAUf,GACX,QAGDC,EAAAA,cAACyB,EAAAA,EAAe,CACdC,QAAS3B,M,oBCDjB,MAxD2C4B,KACzC,MAAM,EAAClC,EAAK,EAAEmC,IAAYC,EAAAA,EAAAA,UAAS,KAC7B,EAAClC,EAAQ,EAAEmC,IAAeD,EAAAA,EAAAA,UAAS,KACnC,EAAC9B,EAAS,EAAEgC,IAAgBF,EAAAA,EAAAA,WAAS,GAErChC,GAAemC,EAAAA,EAAAA,QAAyB,MAoC9C,OACEhC,EAAAA,cAACiC,EAAAA,EAAW,KACVjC,EAAAA,cAACkC,EAAmB,CAClBzC,MAAOA,EACPC,cAAekC,EACfjC,SAAUA,EACVC,iBAAkBkC,EAClBjC,aAAcA,EACdC,gBA1CkBqC,UACtB,GAAqB,IAAjB1C,EAAM2C,OAER,YADAC,MAAM,gBAGR,GAAwB,IAApB1C,EAASyC,OAEX,YADAC,MAAM,gBAIR,MAAMC,EAAmB,GAEzB,GAAIzC,EAAa0C,SAAW1C,EAAa0C,QAAQC,MAC/C,IAAI,IAAIC,EAAI,EAAGA,EAAI5C,EAAa0C,QAAQC,MAAMJ,OAAQK,GAAK,EACzDH,EAASI,KAAK7C,EAAa0C,QAAQC,MAAMC,IAI7CV,GAAa,GACb,UACQY,EAAAA,GAAAA,GAAAA,eAAuC,CAC3ClD,QACAE,WACA6C,MAAOF,IAETD,MAAM,aACNO,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,MACX,CAAE,MAAOC,GACPC,QAAQD,MAAMA,GACdT,MAAM,cACR,CACAN,GAAa,IAYThC,UAAWA,K","sources":["webpack://@callabt/front-manager/./src/view/component/page/NoticesRegisterPage/index.tsx","webpack://@callabt/front-manager/./src/pages/notices/register/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\n\r\nimport { Button, TextField, Typography } from '@mui/material';\r\nimport TextEditor from '../.././../../view/component/text-editor/TextEditor';\r\nimport LoadingBackdrop from '../../backdrop/LoadingBackdrop';\r\n\r\ninterface Props {\r\n  title: string;\r\n  onChangeTitle: (value: string) => void;\r\n  contents: string;\r\n  onChangeContents: (value: string) => void;\r\n  fileInputRef: React.RefObject<HTMLInputElement>;\r\n  onClickRegister: () => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst NoticesRegisterPage: FunctionComponent<Props> = ({\r\n  title, onChangeTitle,\r\n  contents, onChangeContents,\r\n  fileInputRef,\r\n  onClickRegister,\r\n  isLoading,\r\n}) => {\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <Typography variant=\"h4\" style={{ marginBottom: '20px' }}>\r\n        공지사항\r\n      </Typography>\r\n\r\n      <TextField\r\n        label=\"제목\"\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        value={title}\r\n        onChange={(event) => onChangeTitle(event.target.value)}\r\n        disabled={isLoading}\r\n      />\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <TextEditor\r\n          value={contents}\r\n          onChange={onChangeContents}\r\n          placeholder=\"내용을 입력해주세요\"\r\n          readonly={isLoading}\r\n        />\r\n      </div>\r\n\r\n      <input\r\n        type=\"file\"\r\n        multiple\r\n        style={{ marginBottom: '20px', display: 'block' }}\r\n        ref={fileInputRef}\r\n      />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={onClickRegister}\r\n        disabled={isLoading}\r\n      >\r\n        등록하기\r\n      </Button>\r\n      <LoadingBackdrop\r\n        isShown={isLoading}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticesRegisterPage;\r\n","import { CallabtAPI } from '@callabt/core';\r\nimport React, { FunctionComponent, useRef, useState } from 'react';\r\nimport PageWrapper from '../../../lib/PageWrapper';\r\nimport NoticesRegisterPage from '../../../view/component/page/NoticesRegisterPage';\r\nimport { navigate } from 'gatsby';\r\nimport { getNoticesPagePath } from '../../../lib/app-path';\r\n\r\nconst NoticesRegister: FunctionComponent = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [contents, setContents] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onClickRegister = async () => {\r\n    if (title.length === 0) {\r\n      alert('제목을 입력해 주세요.');\r\n      return;\r\n    }\r\n    if (contents.length === 0) {\r\n      alert('내용을 입력해 주세요.');\r\n      return;\r\n    }\r\n\r\n    const fileList: File[] = [];\r\n\r\n    if (fileInputRef.current && fileInputRef.current.files) {\r\n      for(let i = 0; i < fileInputRef.current.files.length; i += 1) {\r\n        fileList.push(fileInputRef.current.files[i]);\r\n      }\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await CallabtAPI.CreateNotice.createNoticeV1({\r\n        title,\r\n        contents,\r\n        files: fileList,\r\n      });\r\n      alert('등록되었습니다.');\r\n      navigate(getNoticesPagePath());\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('등록에 실패했습니다.');\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <NoticesRegisterPage\r\n        title={title}\r\n        onChangeTitle={setTitle}\r\n        contents={contents}\r\n        onChangeContents={setContents}\r\n        fileInputRef={fileInputRef}\r\n        onClickRegister={onClickRegister}\r\n        isLoading={isLoading}\r\n      />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default NoticesRegister;\r\n"],"names":["_ref","title","onChangeTitle","contents","onChangeContents","fileInputRef","onClickRegister","isLoading","React","style","padding","Typography","variant","marginBottom","TextField","label","fullWidth","margin","value","onChange","event","target","disabled","TextEditor","placeholder","readonly","type","multiple","display","ref","Button","color","onClick","LoadingBackdrop","isShown","NoticesRegister","setTitle","useState","setContents","setIsLoading","useRef","PageWrapper","NoticesRegisterPage","async","length","alert","fileList","current","files","i","push","CallabtAPI","navigate","getNoticesPagePath","error","console"],"sourceRoot":""}