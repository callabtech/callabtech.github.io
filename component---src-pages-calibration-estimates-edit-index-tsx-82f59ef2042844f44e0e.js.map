{"version":3,"file":"component---src-pages-calibration-estimates-edit-index-tsx-82f59ef2042844f44e0e.js","mappings":"4OAwDA,MAvC0DA,IAEnD,IAFoD,SACzDC,GACDD,EACC,OACEE,EAAAA,cAAA,OAAKC,UAAU,kCACbD,EAAAA,cAACE,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAO,CAAEC,aAAc,SAAU,SAGzDN,GACCA,EAASO,IAAI,CAACC,EAASC,IACrBR,EAAAA,cAAA,OAAKC,UAAU,UAAUQ,IAAKD,GAC5BR,EAAAA,cAACE,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAO,CAAEC,aAAc,SAC7CE,EAAQG,OAEXV,EAAAA,cAAA,OAAKC,UAAU,kBACZM,EAAQI,MAAML,IAAI,CAACM,EAAMC,IACxBb,EAAAA,cAAA,OAAKC,UAAU,OAAOQ,IAAKI,GACzBb,EAAAA,cAAA,OAAKC,UAAU,SACbD,EAAAA,cAACE,EAAAA,EAAU,KACRU,EAAKF,QAGVV,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAACE,EAAAA,EAAU,CACTE,MAAO,CAAEU,WAAY,QAEpBF,EAAKG,qB,SCgD5B,MArF+BjB,IAA6B,IAA5B,SAAEkB,GAAqBlB,EACrD,MACMmB,EADS,IAAIC,gBAAgBF,EAASG,QAC1BC,IAAI,MAChBC,EAAwBC,OAAOL,IAE/B,EAAClB,EAAQ,EAAEwB,IAAeC,EAAAA,EAAAA,UAA2B,MAoB3D,OAJAC,EAAAA,EAAAA,WAAU,KAdIC,WACZ,IACE,MAAQC,KAAMC,SAA8BC,EAAAA,GAAAA,GAAAA,6BAAmE,CAAEZ,GAAII,IACrH,GAAIO,EAAqB,CACvB,MAAME,EAuBd,SAAsBF,GACpB,MAAO,CACL,CACElB,MAAO,MACPC,MAAO,CACL,CACED,MAAO,KACPK,YAAaa,EAAoBX,IAEnC,CACEP,MAAO,QACPK,YAAaa,EAAoBG,WAEnC,CACErB,MAAO,KACPK,YAAaa,EAAoBlB,OAEnC,CACEA,MAAO,KACPK,YAAaa,EAAoBI,YAIvC,CACEtB,MAAO,MACPC,MAAO,CACL,CACED,MAAO,KACPK,YAAaa,EAAoBK,eAEnC,CACEvB,MAAO,QACPK,YAAaa,EAAoBM,aAEnC,CACExB,MAAO,QACPK,YAAaa,EAAoBO,gBAEnC,CACEzB,MAAO,MACPK,YAAaa,EAAoBQ,SAEnC,CACE1B,MAAO,MACPK,YAAaa,EAAoBS,SAK3C,CAxE4BC,CAAaV,GACjCL,EAAYO,EACd,MACES,MAAM,uBAEV,CAAE,MAAOC,GACPD,MAAM,2BACR,GAIAE,IACC,IAGDzC,EAAAA,cAAC0C,EAAAA,EAAW,KACV1C,EAAAA,cAAC2C,EAAuB,CACtB5C,SAAUA,MA2DX,SAAS6C,IACd,OACE5C,EAAAA,cAAA,aAAO,cAEX,C","sources":["webpack://@callabt/front-manager/./src/view/component/page/CalibrationEstimatePage/index.tsx","webpack://@callabt/front-manager/./src/pages/calibration-estimates/edit/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport { Typography } from '@mui/material';\r\n\r\nimport './index.scss';\r\n\r\ninterface Props {\r\n  sections: Section[] | null;\r\n}\r\n\r\nexport interface Section {\r\n  title: string;\r\n  infos: {\r\n    title: string;\r\n    description: string | number;\r\n  }[];\r\n}\r\n\r\nconst CalibrationEstimatePage: FunctionComponent<Props> = ({\r\n  sections,\r\n}) => {\r\n  return (\r\n    <div className=\"calibration-estimate-page-comp\">\r\n      <Typography variant=\"h4\" style={{ marginBottom: '40px' }}>\r\n        견적 요청\r\n      </Typography>\r\n      {sections && (\r\n        sections.map((section, sectionIndex) => (\r\n          <div className=\"section\" key={sectionIndex}>\r\n            <Typography variant=\"h6\" style={{ marginBottom: '12px' }}>\r\n              {section.title}\r\n            </Typography>\r\n            <div className=\"info-container\">\r\n              {section.infos.map((info, infoIndex) => (\r\n                <div className=\"info\" key={infoIndex}>\r\n                  <div className=\"title\">\r\n                    <Typography>\r\n                      {info.title}\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"description\">\r\n                    <Typography\r\n                      style={{ whiteSpace: 'pre' }}\r\n                    >\r\n                      {info.description}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalibrationEstimatePage;\r\n","import { CallabtAPI, CallabtModel } from '@callabt/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CalibrationEstimatePage, { Section } from '../../../view/component/page/CalibrationEstimatePage';\r\nimport PageWrapper from '../../../lib/PageWrapper';\r\nimport { PageProps } from 'gatsby';\r\n\r\nconst CalibrationEstimatesId = ({ location }: PageProps) => {\r\n  const params = new URLSearchParams(location.search);\r\n  const id = params.get(\"id\");\r\n  const calibrationEstimateId = Number(id);\r\n\r\n  const [sections, setSections] = useState<Section[] | null>(null);\r\n\r\n  const fetch = async () => {\r\n    try {\r\n      const { data: calibrationEstimate } = await CallabtAPI.GetCalibrationEstimateById.getCalibrationEstimateByIdV1({ id: calibrationEstimateId });\r\n      if (calibrationEstimate) {\r\n        const newSections = makeSections(calibrationEstimate);\r\n        setSections(newSections);\r\n      } else {\r\n        alert('해당 교정 견적을 찾을 수 없습니다.');\r\n      }\r\n    } catch (error: any) {\r\n      alert('교정 견적 상세를 불러오는 데 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n  }, []);\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <CalibrationEstimatePage\r\n        sections={sections}\r\n      />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nfunction makeSections(calibrationEstimate: CallabtModel.CalibrationEstimate) {\r\n  return [\r\n    {\r\n      title: '견적서',\r\n      infos: [\r\n        {\r\n          title: 'ID',\r\n          description: calibrationEstimate.id,\r\n        },\r\n        {\r\n          title: '요청 날짜',\r\n          description: calibrationEstimate.createdAt,\r\n        },\r\n        {\r\n          title: '제목',\r\n          description: calibrationEstimate.title,\r\n        },\r\n        {\r\n          title: '내용',\r\n          description: calibrationEstimate.contents,\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: '요청자',\r\n      infos: [\r\n        {\r\n          title: '이름',\r\n          description: calibrationEstimate.requesterName,\r\n        },\r\n        {\r\n          title: '회사 이름',\r\n          description: calibrationEstimate.companyName,\r\n        },\r\n        {\r\n          title: '회사 주소',\r\n          description: calibrationEstimate.companyAddress,\r\n        },\r\n        {\r\n          title: '연락처',\r\n          description: calibrationEstimate.contact,\r\n        },\r\n        {\r\n          title: '이메일',\r\n          description: calibrationEstimate.email,\r\n        },\r\n      ],\r\n    }\r\n  ]\r\n}\r\n\r\nexport default CalibrationEstimatesId;\r\n\r\nexport function Head() {\r\n  return (\r\n    <title>Hello World</title>\r\n  )\r\n}\r\n"],"names":["_ref","sections","React","className","Typography","variant","style","marginBottom","map","section","sectionIndex","key","title","infos","info","infoIndex","whiteSpace","description","location","id","URLSearchParams","search","get","calibrationEstimateId","Number","setSections","useState","useEffect","async","data","calibrationEstimate","CallabtAPI","newSections","createdAt","contents","requesterName","companyName","companyAddress","contact","email","makeSections","alert","error","fetch","PageWrapper","CalibrationEstimatePage","Head"],"sourceRoot":""}