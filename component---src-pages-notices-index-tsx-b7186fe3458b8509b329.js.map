{"version":3,"file":"component---src-pages-notices-index-tsx-b7186fe3458b8509b329.js","mappings":"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","sources":["webpack://@callabt/front-manager/../../node_modules/.pnpm/@mui+icons-material@7.1.2_@mui+material@7.1.2_@types+react@18.3.23_react@18.3.1/node_modules/@mui/icons-material/esm/AddCircle.js","webpack://@callabt/front-manager/./src/view/component/page/NoticesPage/index.tsx","webpack://@callabt/front-manager/./src/pages/notices/index.tsx","webpack://@callabt/front-manager/../../node_modules/.pnpm/@mui+icons-material@7.1.2_@mui+material@7.1.2_@types+react@18.3.23_react@18.3.1/node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m5 11h-4v4h-2v-4H7v-2h4V7h2v4h4z\"\n}), 'AddCircle');","import React, { FunctionComponent } from 'react';\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { styled } from '@mui/material/styles';\r\nimport Pagination from '../../pagination/Pagination';\r\n\r\nimport './index.scss';\r\n\r\ninterface PaginationInfo {\r\n  pageNumber: number;\r\n  pageSize: number;\r\n  totalCount: number;\r\n  onPageChange: (page: number) => void;\r\n  onPageSizeChange: (pageSize: number) => void;\r\n}\r\n\r\ninterface Props {\r\n  rows: Row[];\r\n  onClickEdit: (id: number) => void;\r\n  onClickRegisterButton: () => void;\r\n  paginationInfo: PaginationInfo;\r\n}\r\n\r\nexport interface Row {\r\n  id: number;\r\n  title: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nconst StyledTableHeadCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    fontWeight: 600,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst NoticesPage: FunctionComponent<Props> = ({\r\n  rows, onClickEdit, onClickRegisterButton, paginationInfo\r\n}) => {\r\n  return (\r\n    <div className=\"notices-page-comp\">\r\n      <Typography variant=\"h4\" style={{ marginBottom: '20px' }}>\r\n        공지사항\r\n      </Typography>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" style={{ marginBottom: '20px' }}\r\n        onClick={onClickRegisterButton}\r\n      >\r\n        <AddCircleIcon fontSize=\"small\" style={{ marginRight: '8px' }}/>\r\n        등록하기\r\n      </Button>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableHeadCell>ID</StyledTableHeadCell>\r\n              <StyledTableHeadCell align=\"center\">제목</StyledTableHeadCell>\r\n              <StyledTableHeadCell align=\"center\">생성 날짜</StyledTableHeadCell>\r\n              <StyledTableHeadCell align=\"center\">수정 날짜</StyledTableHeadCell>\r\n              <StyledTableHeadCell align=\"center\"></StyledTableHeadCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.id} hover>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.id}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.title}</TableCell>\r\n                <TableCell align=\"center\">{row.createdAt}</TableCell>\r\n                <TableCell align=\"center\">{row.updatedAt}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={() => onClickEdit(row.id)}>\r\n                    <EditIcon style={{ fontSize: '17px' }} />\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Pagination {...paginationInfo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticesPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport NoticesPage, { Row } from '../../view/component/page/NoticesPage';\r\nimport { CallabtAPI } from '@callabt/core';\r\nimport PageWrapper from '../../lib/PageWrapper';\r\nimport { navigate } from 'gatsby';\r\nimport { getNoticesEditPagePath, getNoticesRegisterPagePath } from '../../lib/app-path';\r\n\r\nconst Notices = () => {\r\n  const [rows, setRows] = useState<Row[]>([]);\r\n  const [pagination, setPagination] = useState({\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n  });\r\n\r\n  const fetch = async (page = pagination.pageNumber, size = pagination.pageSize) => {\r\n    try {\r\n      const { data, meta } = await CallabtAPI.GetNotices.getNotices({\r\n        pageSize: size,\r\n        pageNumber: page,\r\n        orderField: 'id',\r\n        orderDirection: 'DESC',\r\n      });\r\n      setRows(data);\r\n      setPagination({\r\n        pageNumber: meta.offsetPagination.pageNumber,\r\n        pageSize: meta.offsetPagination.pageSize,\r\n        totalCount: meta.offsetPagination.totalCount,\r\n      });\r\n    } catch (error: any) {\r\n      if (error.errorCodes?.includes(CallabtAPI.CommonErrorCode.INVALID_QUERY_ORDER_FIELD)) {\r\n        alert('잘못된 정렬 필드입니다.');\r\n      } else if (error.errorCodes?.includes(CallabtAPI.CommonErrorCode.INVALID_QUERY_ORDER_DIRECTION)) {\r\n        alert('잘못된 정렬 방향입니다.');\r\n      } else {\r\n        alert('공지사항 목록을 불러오는 데 실패했습니다.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickEdit = (id: number) => {\r\n    navigate(getNoticesEditPagePath({ id }));\r\n  };\r\n\r\n  const onClickRegisterButton = () => {\r\n    navigate(getNoticesRegisterPagePath());\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    fetch(newPage, pagination.pageSize);\r\n  };\r\n\r\n  const handlePageSizeChange = (newPageSize: number) => {\r\n    fetch(1, newPageSize);\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <NoticesPage\r\n        rows={rows}\r\n        onClickEdit={onClickEdit}\r\n        onClickRegisterButton={onClickRegisterButton}\r\n        paginationInfo={{\r\n          ...pagination,\r\n          onPageChange: handlePageChange,\r\n          onPageSizeChange: handlePageSizeChange,\r\n        }}\r\n      />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Notices;\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["createSvgIcon","d","StyledTableHeadCell","styled","TableCell","_ref","theme","tableCellClasses","head","backgroundColor","palette","primary","main","color","common","white","fontWeight","body","fontSize","_ref2","rows","onClickEdit","onClickRegisterButton","paginationInfo","React","className","Typography","variant","style","marginBottom","Button","onClick","AddCircleIcon","marginRight","TableContainer","component","Paper","Table","TableHead","TableRow","align","TableBody","map","row","key","id","hover","scope","title","createdAt","updatedAt","EditIcon","Pagination","Notices","setRows","useState","pagination","setPagination","pageNumber","pageSize","totalCount","fetch","async","page","size","data","meta","CallabtAPI","orderField","orderDirection","offsetPagination","error","_error$errorCodes","_error$errorCodes2","errorCodes","includes","INVALID_QUERY_ORDER_FIELD","alert","INVALID_QUERY_ORDER_DIRECTION","useEffect","PageWrapper","NoticesPage","navigate","getNoticesEditPagePath","getNoticesRegisterPagePath","onPageChange","newPage","onPageSizeChange","newPageSize"],"sourceRoot":""}