{"version":3,"file":"component---src-pages-notices-edit-index-tsx-f1797da970b980fb0f9f.js","mappings":"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","sources":["webpack://@callabt/front-manager/../../node_modules/.pnpm/@mui+icons-material@7.1.2_@mui+material@7.1.2_@types+react@18.3.23_react@18.3.1/node_modules/@mui/icons-material/esm/Delete.js","webpack://@callabt/front-manager/./src/view/component/page/NoticeEditPage/index.tsx","webpack://@callabt/front-manager/./src/pages/notices/edit/index.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import {\r\n  TextField, Typography, Button, Paper,\r\n  TableContainer, Table, TableHead, TableRow, TableBody, TableCell,\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport React, { FunctionComponent } from 'react';\r\nimport TextEditor from '../../../../view/component/text-editor/TextEditor';\r\nimport LoadingBackdrop from '../../backdrop/LoadingBackdrop';\r\n\r\ninterface Props {\r\n  title: string;\r\n  onChangeTitle: (value: string) => void;\r\n  contents: string;\r\n  onChangeContents: (value: string) => void;\r\n  onClickEdit: () => void;\r\n  fileInfos: { id: number; name: string; location: string }[];\r\n  fileInputRef: React.RefObject<HTMLInputElement>;\r\n  onClickAddFiles: () => void;\r\n  onClickDeleteFile: (id: number) => void;\r\n  onClickDelete: () => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst NoticesEditPage: FunctionComponent<Props> = ({\r\n  title, onChangeTitle,\r\n  contents, onChangeContents,\r\n  onClickEdit,\r\n  fileInfos,\r\n  fileInputRef,\r\n  onClickAddFiles,\r\n  onClickDeleteFile,\r\n  onClickDelete,\r\n  isLoading,\r\n}) => {\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <Typography variant=\"h4\" style={{ marginBottom: '20px' }}>\r\n        공지사항\r\n      </Typography>\r\n\r\n      <TextField\r\n        label=\"제목\"\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        value={title}\r\n        onChange={(event) => onChangeTitle(event.target.value)}\r\n      />\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <TextEditor\r\n          value={contents}\r\n          onChange={onChangeContents}\r\n          placeholder=\"내용을 입력해주세요.\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        style={{ marginBottom: '60px', display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={onClickEdit}\r\n        >\r\n          수정하기\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={onClickDelete}\r\n        >\r\n          공지사항 삭제하기\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <Typography variant=\"h5\" style={{ marginBottom: '20px' }}>\r\n        첨부 파일\r\n      </Typography>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell align=\"center\">이름</TableCell>\r\n              <TableCell align=\"center\">위치</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {fileInfos.map((info, index) => (\r\n              <TableRow key={index} hover>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {index + 1}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{info.name}</TableCell>\r\n                <TableCell align=\"center\">{info.location}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={() => onClickDeleteFile(info.id)}>\r\n                    <DeleteIcon style={{ fontSize: '17px' }} />\r\n                  </Button>\r\n              </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <input\r\n        type=\"file\"\r\n        multiple\r\n        style={{ marginBottom: '20px', marginTop: '20px', display: 'block' }}\r\n        ref={fileInputRef}\r\n      />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={onClickAddFiles}\r\n        style={{  }}\r\n      >\r\n        추가하기\r\n      </Button>\r\n      <LoadingBackdrop\r\n        isShown={isLoading}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticesEditPage;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport NoticesEditPage from '../../../view/component/page/NoticeEditPage';\r\nimport { getNoticesPagePath } from '../../../lib/app-path';\r\nimport { CallabtAPI } from '@callabt/core';\r\nimport PageWrapper from '../../../lib/PageWrapper';\r\nimport { navigate, PageProps } from 'gatsby';\r\n\r\nconst NoticesEdit = ({ location }: PageProps) => {\r\n  const params = new URLSearchParams(location.search);\r\n  const id = params.get(\"id\");\r\n  const noticeId = Number(id);\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [contents, setContents] = useState('');\r\n  const [fileInfos, setFileInfos] = useState<{ id: number; name: string; location: string }[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onClickEdit = async () => {\r\n    setIsLoading(true);\r\n    if (confirm('수정하시겠습니까?')) {\r\n      try {\r\n        await CallabtAPI.EditNotice.editNotice({ id: noticeId, title, contents });\r\n        alert('수정 됐습니다.');\r\n        \r\n      } catch(error) {\r\n        console.error(error);\r\n        alert('수정에 실패했습니다.');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const onClickAddFiles = async () => {\r\n    const fileList: File[] = [];\r\n    \r\n    if (fileInputRef.current && fileInputRef.current.files) {\r\n      for(let i = 0; i < fileInputRef.current.files.length; i += 1) {\r\n        fileList.push(fileInputRef.current.files[i]);\r\n      }\r\n    }\r\n    \r\n    if (fileList.length > 0) {\r\n      setIsLoading(true);\r\n      try {\r\n        await CallabtAPI.AddNoticeFiles.addNoticeFiles({ id: noticeId, files: fileList });\r\n        alert('첨부 파일이 추가 됐습니다.');\r\n        fetch();\r\n      } catch(error) {\r\n        console.error(error);\r\n        alert('첨부 파일 추가에 실패했습니다.');\r\n      }\r\n      setIsLoading(false);\r\n    } else {\r\n      alert('선택된 파일이 없습니다.')\r\n    }\r\n  };\r\n\r\n  const onClickDeleteFile = async (id: number) => {\r\n    setIsLoading(true);\r\n    if (confirm('삭제하시겠습니까?')) {\r\n      try {\r\n        await CallabtAPI.DeleteNoticeFile.deleteNoticeFile({ id });\r\n        alert('삭제 됐습니다.');\r\n        setFileInfos(fileInfos.filter(info => info.id !== id));\r\n      } catch(error) {\r\n        console.error(error);\r\n        alert('삭제에 실패했습니다.');\r\n      }\r\n    }\r\n    setIsLoading(false)\r\n  };\r\n\r\n  const onClickDelete = async () => {\r\n    setIsLoading(true);\r\n    if (confirm('삭제하시겠습니까?')) {\r\n      try {\r\n        await CallabtAPI.DeleteNotice.deleteNotice({ id: noticeId });\r\n        alert('삭제 됐습니다.');\r\n        navigate(getNoticesPagePath());\r\n      } catch(error) {\r\n        console.error(error);\r\n        alert('삭제에 실패했습니다.');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const fetch = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data: notice } = await CallabtAPI.GetNoticeById.getNoticeById({ id: noticeId });\r\n      \r\n      if (notice) {\r\n        setTitle(notice.title);\r\n        setContents(notice.contents);\r\n        setFileInfos(notice.files);\r\n      } else {\r\n        alert('해당 공지사항을 찾을 수 없습니다.');\r\n      }\r\n    } catch (error: any) {\r\n      console.error(error);\r\n      alert('공지사항을 불러오는 데 실패했습니다.');\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n  }, []);\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <NoticesEditPage\r\n        title={title}\r\n        onChangeTitle={setTitle}\r\n        contents={contents}\r\n        onChangeContents={setContents}\r\n        onClickEdit={onClickEdit}\r\n        fileInfos={fileInfos}\r\n        fileInputRef={fileInputRef}\r\n        onClickAddFiles={onClickAddFiles}\r\n        onClickDeleteFile={onClickDeleteFile}\r\n        onClickDelete={onClickDelete}\r\n        isLoading={isLoading}\r\n      />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default NoticesEdit;\r\n"],"names":["createSvgIcon","d","_ref","title","onChangeTitle","contents","onChangeContents","onClickEdit","fileInfos","fileInputRef","onClickAddFiles","onClickDeleteFile","onClickDelete","isLoading","React","style","padding","Typography","variant","marginBottom","TextField","label","fullWidth","margin","value","onChange","event","target","TextEditor","placeholder","display","justifyContent","Button","color","onClick","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","info","index","key","hover","scope","name","location","id","DeleteIcon","fontSize","type","multiple","marginTop","ref","LoadingBackdrop","isShown","URLSearchParams","search","get","noticeId","Number","setTitle","useState","setContents","setFileInfos","setIsLoading","useRef","fetch","async","data","notice","CallabtAPI","files","alert","error","console","useEffect","PageWrapper","NoticesEditPage","confirm","fileList","current","i","length","push","filter","navigate","getNoticesPagePath"],"sourceRoot":""}